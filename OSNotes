xfreerdp /u:student /v:10.50.38.32 /dynamic-resolution +glyph-cache +clipboard

Get-Command type cmdlet | Sort-Object -property Noun | ft -groupby Noun 
Get-Process | Get-Member | Where-Object {$_.membertype -match "Property"}
(get-process calculator*).kill()
get-process | select-object name,id,path | where-bject {$_.id -lt '1000'}

(get-process | select-object name,id,path | where-bject {$_.id -lt '1000'}).count

get-cimclass *

get-ciminstance -classname win32_logicaldisk 

get-ciminstance -classname win32_logicaldisk -filter "drivetype=3"
get-ciminstance -classname win32_logicaldisk -filter "drivetype=3" | get-member
get-wmiobject -class win32_logicaldisk 
get-wmiobject -class win32_logicaldisk -filter "Drivetype=3"

get-executionpolicy -list
set-executionpolicy -Executionpolicy urestricted -scope CurrentUser

PERSISTENCE

$profile   (path to profile) current user current host
test-path -path $profile.allusersallhosts

new-item -itemtype file -path $profile -force

to open profile : ISE $profile  **save scripts in this profile when this user or profile logs in scripts will run through that profile automatically

POWERSHELL REMOTING

winrm is manager
wrsm is the protocol

get-item WSMan:\localhost\Client\TrustedHosts
set-item WSMan:\localhost\Client\TrustedHosts -value "file-server, domain-control, workstation2"

$session new-pssession -computername workstation2 -credential andy.dwyer
invoke-command -computername file-server (get-service)     -obtain this command from the given system

invoke-command -computername file-server,domain-control {get-process} -asjob   *gives as job id then remember job id and drop the number to get command

DOWNLOADING 

$url = "http://downloads.volatilityfoundation.org/releases/2.6/volatility_2.6_win64_standalone.zip"
$output = "$PSScriptRoot\volatility_2.6_win64_standalone.zip"
$start_time = Get-Date

$wc = New-Object System.Net.WebClient 
$wc.DownloadFile($url, $output) 

Admin Station : 14 (10.50.34.65)
Workstation1 : (10.14.0.5)

##REGISTRY

    regedit.exe

        GUI

        Located at "C:\Windows\regedit.exe"

    reg.exe

        CLI

        Located at "C:\Windows\System32\reg.exe"

        Minimum commands to know

            Reg add, reg query, reg delete

Root hive keys loaded as powershell drives

Commands:     get-item, get-itemproperty, get-childitem

    set-itemproperty, new-item, new-itemproperty

Mounting Remote Registry :
  Open the Regedit GUI
Click on *File* => *Connect Network Registry*
Type *File-Server*
Click on *Check Names* Button (File-Server will become underlined)
Click *OK*

Registry changes often require a restart

Foresncialy relevant keys : internet url history, usb history, wirless access point history

Keys that can be utitlized for peristence:
    HKLM\Software\Microsoft\Windows\CurrentVersion\Run

    HKU\<SID>\Software\Microsoft\Windows\CurrentVersion\Run

    HKLM\SYSTEM\CurrentControlSet\services

    HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders

    HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\User Shell Folders

    HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon



HKU\<SID>\Software\Policies\Microsoft\Windows\System\Scripts

    Group policy Logon/Logoff Scripts defined here

HKLM is registry for all hardware system and security**

HKCU - 18 - local system account
       19 - 
       20
HKEY current config - 
HKEY Classes Root  - symbolic link to classes software ...


Commands

reg query HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run



reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run /v testme /t REG_SZ /d C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe

    The /v stands for Value; In this case the name of this Key Value.

    The /t stands for Type; Types can be any of the Data Types that we went over earlier.

    The /d stands for Data; Is what is the actual Data or in this case a command to open a file every time the system is ran.

reg delete HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run /v testme


Minimum command knowledge:


Minimum commands to know

    Query

        Get-ChildItem cmdlet gets the items in one or more specified locations.

        Get-ItemProperty cmdlet gets the items in one or more specified locations.

        Get-Item cmdlet gets the item at the specified location. It doesnâ€™t get the contents of the item at the location unless you use a wildcard character (*) to request all the contents of the item.

    Modify

        Set-ItemProperty cmdlet changes the value of the property of the specified item. example, changing setting to :true or :false.

        Remove-ItemProperty cmdlet to delete registry values and the data that they store.

    Create

        New-Item cmdlet creates a new item and sets its value. In the registry, New-Item creates registry keys and entries.

        New-Itemproperty cmdlet creates a new property for a specified item and sets its value. Typically, this cmdlet is used to create new registry values, because registry values are properties of a registry key item.




Trusted documents is for documents with active content i.e. embedded macros. (New-Item "HKLM:\Software\Microsoft\Office\14.0\Security\Trusted Documents\TrustRecords" -Force)

o create a new Windows PowerShell drive, you must supply three parameters:

A Name for the drive (you can use any valid Windows PowerShell name)

The PSProvider (use "FileSystem" for file system locations, "Registry" for registry locations, and it could also be a shared folder on a remote server.)

The Root, that is, the path to the root of the new drive.


Create net variable then ap a drive to it :
  [String]$WebDAVShare = '\\live.sysinternals.com\Tools'          
New-PSDrive -Name S -PSProvider FileSystem -Root $WebDAVShare   
cd S:   



##Alternate Data Steams

  does not change md5 hash of a file
used to hide data using NTFS
if you get steam and the stream porperty returns $data there is no ADS

##LINUX  ESSENTIALS

ssh -J andy.dwyer@10.50.34.65 @ip


##WINDOWS BOOT PROCESS

    When booting the OS SYSTEM will always be PID 4

        Display current BCD config:

        bcdedit.exe

    BACKUP BCD Configuration:

        bcdedit /export C:\SAVEDBCD

Services.exe is an area o persistence

get service where object to find the ones running 

##LINUX BOOT PROCESS

 Systemmd is the newer version acronym for startup (big mike got killed in russia)

bootstrap code are first 446 bytes

lsblk list all media

persistence

/etc/environment 
     and 
(anytime user logs in with interactive shell will use profile /etc/profile or /etc/profile.d) 

bash profile 

su xxd -l 512 -g 1 /dev/vda  (dumping the mdr to the screen)

dd command (exact copy bit for bit) sudo dd i=/dev/vda of=MBRcopy bs=512 count=1

check services ls -l /etc/rc3.d/  (shows services that computer will run)


Process Validity

if dlls been running out of other folder labeled suspicious 

 get-process chrome | foreach {$a} {$_.modules} | more

pseudo ports

##LINUX PROCESSES

There are two primary processes after startup:

    For kernel-space processes [kthreadd] ( PID = 2 )

    For user-space processes /sbin/init ( PID = 1 )
                                    ^
Orphan - Parent process exited, adopted by sbin/init with PPID of 1.

    All daemons are orphans

    disown -a && exit # Close a shell/terminal and force all children to be adopted



##ARTIFACTS, AUDITING,AND LOGGING

    will require using the sid rom a specified user in order to get artifacts 


et-wmiobject win32_useraccount | select name,sid (PowerShell)

Get-LocalUser | select Name,SID (PowerShell)

wmic useraccount get name,sid (CMD.EXE ONLY)

prefetch will show proccesses run, allowing for research in exploitation.

##USER ASSIST (GUI ran programs) - difference between prefetch shows if it was ran by a shortcut

    The UserAssist registry key tracks the GUI-based programs that were ran by a particular user.

    View executable Files run

    Get-ItemProperty 'REGISTRY::HKEY_USERS\*\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\UserAssist\{CEBFF5CD-ACE2-4F4F-9178-9926F41749EA}\Count'

    View Shortcut files executed

    Get-ItemProperty 'REGISTRY::HKEY_USERS\*\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\UserAssist\{F4E57C4B-2036-45F0-A9AB-443BCFE33D9F}\Count'


wmic useraccount where 'suid' get name










































































